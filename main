from pybricks.pupdevices import Motor
from pybricks.parameters import Port, Direction, Button, Stop
from pybricks.robotics import DriveBase
from pybricks.hubs import PrimeHub
from pybricks.tools import wait


#=======================CONFIGURAÇÕES INICIAIS==========================#
hub = PrimeHub()

'''
print (hub.system.info()["name"])
# 🔎 Checagem de segurança: só roda se for o HUB certo
if hub.system.info()["name"] != "V8 HUB":
    print("Hub Errado")
    while True:               # trava execução
        raise SystemExit  # encerra o programa
'''


hub.system.set_stop_button((Button.BLUETOOTH))

left_motor = Motor(Port.B, Direction.COUNTERCLOCKWISE)
right_motor = Motor(Port.F)

motor_direito = Motor(Port.A, Direction.COUNTERCLOCKWISE)
motor_esquerdo = Motor(Port.E)

# Initialize the drive base. In this example, the wheel diameter is 56mm.
# The distance between the two wheel-ground contact points is 112mm.
drive_base = DriveBase(left_motor, right_motor, wheel_diameter=56, axle_track=112)

# Optionally, uncomment the line below to use the gyro for improved accuracy.
drive_base.use_gyro(True)




#=======================FUNÇÕES DE MOVIMENTO==========================#
def giroPID(angulo, kp, ki, kd):
    integral = 0
    ultimo_erro = 0
    while abs(hub.imu.heading())<abs(angulo):
        erro = angulo-hub.imu.heading()
        integral = integral + erro
        derivativa = erro-ultimo_erro
        movimento = (erro*kp)+(integral*ki)+(derivativa*kd)
        left_motor.run(movimento)
        right_motor.run(-movimento)
        ultimo_erro = erro
    hub.imu.reset_heading(0)
    left_motor.stop()
    right_motor.stop()


def config(velocidade, aceleracao):
    drive_base.settings(velocidade, aceleracao)


def resetar_guinada():
    drive_base.use_gyro(False)
    hub.imu.reset_heading(0)
    drive_base.use_gyro(True)



#=======================MÁQUINA DE ESTADO==========================#
class StateMachine:
    def __init__(self, states):
        self.states = states              # lista de estados
        self.index = 0                    # começa no primeiro estado

    def next_state(self):
        """Avança para o próximo estado"""
        self.index = (self.index + 1) % len(self.states)
        self.show_state()

    def prev_state(self):
        """Volta para o estado anterior"""
        self.index = (self.index - 1) % len(self.states)
        self.show_state()

    def run_state(self):
        """Executa a ação do estado atual"""
        state = self.states[self.index]
        print(f"Executando ação do estado: {state['name']}")    
        state["action"]()

    def show_state(self):
        """Mostra o estado atual"""

        print(f"Estado atual: {self.states[self.index]['name']}")
        hub.display.number(self.index+1)



#=======================FUNÇÕES DE STARTS==========================#
def start1():# start das pedras 
    drive_base.settings(500, 300)   
    drive_base.straight(560)
    giroPID(32, 1.5, 0.0003, 5)
    wait (500)
    drive_base.settings(400, 400)   
    drive_base.straight(100)
    resetar_guinada()
    drive_base.straight(-30)
    resetar_guinada()
    giroPID(54, 1.5, 0.0003, 1)
    drive_base.straight(100)
    motor_esquerdo.run_time(-400,700)
    drive_base.straight(135)
    motor_esquerdo.run_angle(600,270, Stop.BRAKE, True)
    drive_base.straight(-210)
    resetar_guinada()
    giroPID(46, 1.5, 0.0003, 1)
    drive_base.settings(200, 200)
    drive_base.straight(-140)
    drive_base.straight(30)
    giroPID(38, 1.5, 0.0003, 1)
    drive_base.settings(800, 5000)
    drive_base.straight(600)
def start2():#sttrat do tridente 
    drive_base.settings(600, 600)   
    drive_base.straight(600)
    drive_base.settings(800,800)
    drive_base.straight(-150)
    drive_base.settings(350,350)
    drive_base.straight(200)
    giroPID(-35, 2, 0.0001, 1)
    drive_base.settings(400, 400)   
    drive_base.straight(200)
    motor_direito.run_angle(400, -300, Stop.BRAKE, True)
    drive_base.straight(-230)
    resetar_guinada()
    giroPID(-47, 2, 0.0001, 1)
    drive_base.settings(300, 300)   
    drive_base.straight(300)
    motor_esquerdo.run_angle(300, -300, Stop.BRAKE, True)
    drive_base.straight(-170)
    resetar_guinada()
    giroPID(-60, 2, 0.0001, 1)
    drive_base.settings(800, 2000)
    drive_base.straight(500)

def start3():#start da areia 
    drive_base.settings(300,300) #MUDAR VELOCIDADE
    drive_base.straight(440) #ANDAR PRA FRENTE
    drive_base.settings(600,350) #MUDAR VELOCIDADE

    drive_base.straight(-180) #ANDAR PRA FRENTE
    drive_base.settings(200,200) #MUDAR VELOCIDADE
    drive_base.straight(260) #ANDAR PRA FRENTE
    wait (1000)
    drive_base.settings(900,700) #MUDAR VELOCIDADE

    drive_base.straight(-500) #ANDAR PRA FRENTE



    sm.next_state

def start4():#start do telhado com bandeira 
 drive_base.straight(200)

        
def start5():#start do silo 
    drive_base.settings(600,2000)
    drive_base.straight(350)
    motor_direito.run_time(800, 1000, Stop.BRAKE, True)
    motor_direito.run_time(-500, 1000, Stop.BRAKE, True)
    motor_direito.run_time(800, 1000, Stop.BRAKE, True)
    motor_direito.run_time(-500, 1000, Stop.BRAKE, True)
    motor_direito.run_time(800, 1000, Stop.BRAKE, True)
    motor_direito.run_time(-500, 1000, Stop.BRAKE, True)
    motor_direito.run_time(800, 1000, Stop.BRAKE, True)
    motor_direito.run_time(-500, 1000, Stop.BRAKE, True)
    drive_base.straight(-100)
    resetar_guinada()
    giroPID(-50, 2, 0.0001, 1)
    drive_base.straight(255)
    motor_esquerdo.run_angle(300, 700, Stop.BRAKE, True)
    drive_base.settings(600,2000)
    drive_base.straight(-400)
'''motor_direito.run_time(300, 500, Stop.BRAKE, True)
 motor_direito.run_time(300, -500, Stop.BRAKE, True)
 motor_direito.run_time(300, 500, Stop.BRAKE, True)
 motor_direito.run_time(300, -500, Stop.BRAKE, True)
 motor_direito.run_time(300, 500, Stop.BRAKE, True)'''
 
def start6():#start da compartilhada
    drive_base.settings(400, 400)
    drive_base.straight(620)   
    resetar_guinada()
    giroPID(-86, 2, 0.0005, 1)
    drive_base.straight(-325)
    resetar_guinada()
    giroPID(85, 2, 0.0005, 1)

    wait (200)
    drive_base.settings(300, 300)
    drive_base.straight(12)

    motor_direito.run_angle(300, -300, Stop.BRAKE, True)
    motor_esquerdo.run_angle(300, 190, Stop.BRAKE, True)
    drive_base.settings(500,5000)
    drive_base.straight(120)
    motor_esquerdo.run_time(-500, 3000, Stop.BRAKE, True)
    motor_esquerdo.run_angle(200, 300, Stop.BRAKE, True)
    resetar_guinada()
    giroPID(5, 2, 0.0005, 1)
    drive_base.settings(500,500)
    drive_base.straight(-90)
    resetar_guinada()
    giroPID(85, 2, 0.0005, 1)
    drive_base.settings(900,2000)
    drive_base.straight(-250)
    resetar_guinada()
    giroPID(95, 5, 0.0005, 1)
    drive_base.straight(650)
def start7():#start do indiana jones 
    drive_base.settings(500,400)
    drive_base.straight(460)
    resetar_guinada()
    giroPID(-47, 1.5, 0.0002, 1)
    motor_direito.run_angle(200, -500, Stop.BRAKE, True)
    drive_base.straight(270)
    resetar_guinada ()
    giroPID(-17, 1.5, 0.0002, 1)
    drive_base.straight(200)
    resetar_guinada()
    giroPID(-28, 1.5, 0.0002, 1)
    drive_base.straight(620)
    resetar_guinada()
    giroPID(-105, 1.5, 0.0002, 1)
    motor_esquerdo.run_angle(200,600,Stop.BRAKE, True)
    drive_base.straight(160)
    motor_esquerdo.run_angle(200,-600,Stop.BRAKE, True)
    motor_direito.run_angle(200,600,Stop.BRAKE, True)
    drive_base.straight(-50)


def start8():#start do guindaste 
    hub.imu.reset_heading(0)
    drive_base.settings(400,500)
    drive_base.straight(900)
    giroPID(90,1.5,0.0005,1)
    drive_base.settings(200,100)
    drive_base.straight(120)
    drive_base.straight(-15)
    giroPID(-5,2,0.0005,1)
    wait (500)
    motor_direito.run_angle(300,1000)
    giroPID(2,2,0.0005,1)
    #girar motor
    drive_base.settings(400,500)
    drive_base.straight(-230)
    #girar motor
    #motor_esquerdo.run_angle(300,200)
    #wait(200)
    motor_esquerdo.run_angle(-900,400)
    wait(300)
    motor_esquerdo.run_angle(600,250)

    drive_base.settings(800,4000)

    drive_base.straight(100)
    giroPID(-55,2, 0.0005,1)
    drive_base.settings(800,8000)
    drive_base.straight(600)





#=======================EXECUÇÃO PRINCIPAL==========================#
if __name__ == "__main__":
    # Definindo os estados
     states = [
        {"name": "Start 1", "action": lambda: start2()},
        {"name": "Start 2", "action": lambda: start6()},
        {"name": "Start 3", "action": lambda: start3()},
        {"name": "Start 4", "action": lambda: start8()},
        {"name": "Start 5", "action": lambda: start5()},
        {"name": "Start 6", "action": lambda: start1()},
        {"name": "Start 7", "action": lambda: start7()},
    ]

     sm = StateMachine(states)
     sm.show_state()

    # Loop infinito de estados.
     while True:
        if Button.RIGHT in hub.buttons.pressed():   # botão direito
            sm.next_state()
            wait (200)
        elif Button.LEFT in hub.buttons.pressed(): # botão esquerdo
            sm.prev_state()
            wait (200)
        elif Button.CENTER in hub.buttons.pressed(): # botão do meio
            sm.run_state()
            wait (200)
        elif Button.CENTER in hub.buttons.pressed() and Button.BLUETOOTH in hub.buttons.pressed(): # sair
            print("Encerrando...")
            break
